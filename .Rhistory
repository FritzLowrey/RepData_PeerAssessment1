debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(matrix(c(1,0,0,1), nrow=2, ncol=2))
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(matrix(c(1,0,0,1), nrow=2, ncol=2))
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(matrix(c(1,0,0,1), nrow=2, ncol=2))
solve(cacheMatrix)
cachMatrix
cacheMatrix
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(matrix(c(1,0,0,1), nrow=2, ncol=2))
cacheSolve(matrix(c(1,0,0,1), nrow=2, ncol=2))
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(matrix(c(1,0,0,1), nrow=2, ncol=2))
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(matrix(c(1,0,0,1), nrow=2, ncol=2))
all(matrix(c(1,0,0,1), nrow=2, ncol=2), cacheMatrix)
class(cacheMatrix)
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(matrix(c(1,0,0,1), nrow=2, ncol=2))
cacheSolve(matrix(c(1,0,0,1), nrow=2, ncol=2))
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(matrix(c(1,0,0,1), nrow=2, ncol=2))
all(matrix(c(1,0,0,1), nrow=2, ncol=2), cacheMatrix)
all(matrix(c(1,0,0,1), nrow=2, ncol=2), cacheInverse)
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
all(matrix(c(1,0,0,1), nrow=2, ncol=2) == cacheInverse)
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/ProgrammingAssignment2/cachematrix.R')
set.seed(1)
rpois(5,2)
debugSource('C:/Users/Fritz.Lowrey/Dropbox/Coursera/R programming/rankhospital.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/Coursera/R programming/rankhospital.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/Coursera/R programming/rankhospital.R')
rankhospital("TX", "heart failure", 4)
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/DataCleaningProject/run_analysis.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/DataCleaningProject/run_analysis.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/DataCleaningProject/run_analysis.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/DataCleaningProject/run_analysis.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/DataCleaningProject/run_analysis.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/DataCleaningProject/run_analysis.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/DataCleaningProject/run_analysis.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/DataCleaningProject/run_analysis.R')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/DataCleaningProject/run_analysis.R')
acs <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv ")
thishtml <- read.html("http://biostat.jhsph.edu/~jleek/contact.html")
thepage <- readLines("http://biostat.jhsph.edu/~jleek/contact.html")
lapply(thepage[c(10,20,30,100)], nchar)
bigset <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
?read.table
bigset <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", header=TRUE)
bigread <- readlines("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
bigread <- readLines("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
View(bigread)
bigread <- bigread[c(3:length(bigread))]
View(bigread)
bigread <- bigread[c(3:length(bigread))]
View(bigread)
scan(bigread[1])
bigread <- lapply(strsplit(bigread, sep="\t"), as.numeric)
bigread <- lapply(strsplit(bigread), as.numeric)
bigread <- lapply(strsplit(bigread, " "), as.numeric)
View(bigread)
getwd()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", "getdata.for")
source("https://github.com/hadley/httr/blob/master/demo/oauth2-github.r")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, -5:20)
-5:20
-(5:20)
select(cran, -(X:size) )
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country="US")
filter(cran, r_version == "3.1.1", country=="US")
?Comparison
filter(cran, r_version <= "3.0.2", country=="IN")
filter(cran, country == "US" | country=="IN")
filter(cran, size>100500 & r_os == "linux-gnu")
filter(cran, size>100500 && r_os == "linux-gnu")
filter(cran, size>100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_db=size_mb/2^10)
mutate(cran3, size_gb=size/2^10)
cran3 <- mutate(cran3, size_mb=size/2^20)
mutate(cran3, size_gb=size_mb/2^10)
mutate(cran3, size_mb=size/2^20, size_gb=size_mb/2^10)
cran3 <- select(cran3, -size_mb)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes=mean(size))
library(dplyr)
tbl_df(mydf)
cran <- tbl_df(mydf)
rm(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(cran, mean(size))
summarize(by_package, mean(size))
source('C:/Users/FRITZ~1.LOW/AppData/Local/Temp/RtmpqYu90Y/summarize1.R')
source('C:/Users/FRITZ~1.LOW/AppData/Local/Temp/RtmpqYu90Y/summarize1.R')
pack_sum
submit
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sub$unique, probs = 0.99)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
source('C:/Users/FRITZ~1.LOW/AppData/Local/Temp/RtmpqYu90Y/summarize2.R')
submit()
source('C:/Users/FRITZ~1.LOW/AppData/Local/Temp/RtmpqYu90Y/summarize3.R')
submit()
source('C:/Users/FRITZ~1.LOW/AppData/Local/Temp/RtmpqYu90Y/summarize4.R')
submit()
View(result3)
source('C:/Users/FRITZ~1.LOW/AppData/Local/Temp/RtmpqYu90Y/chain1.R')
submit()
source('C:/Users/FRITZ~1.LOW/AppData/Local/Temp/RtmpqYu90Y/chain2.R')
source('C:/Users/FRITZ~1.LOW/AppData/Local/Temp/RtmpqYu90Y/chain2.R')
submit()
source('C:/Users/FRITZ~1.LOW/AppData/Local/Temp/RtmpqYu90Y/chain3.R')
submit()
source('C:/Users/FRITZ~1.LOW/AppData/Local/Temp/RtmpqYu90Y/chain4.R')
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
amzn2012 <- amnz[Date >= "1/1/2012"]
amzn2012 <- amzn[Date >= "1/1/2012"]
amzn2012 <- amzn['2012']
amzn2012
?[.xts]
subsetMonday <- subset(amzn2012, amzn2012$..2=="2")
View(subsetMonday)
subsetMonday <- subset(amzn2012, amzn2012$..2=="2")
View(subsetMonday)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "getdata.csv")
indata <- read.table("getdata.csv")
getnames(indata)
getNames(indata)
names(indata)
indata <- read.csv("getdata.csv")
indata[1,]
indata[123,]
splitNames <- strsplit(indata[], "wgtp")
splitNames <- lapply(col.names(indata), function(x) strsplit(x, "wgtp"))
splitNames <- lapply(colnames(indata), function(x) strsplit(x, "wgtp"))
splitNames[123]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdp.csv")
ingdp <- read.csv("gdp.csv")
View(ingdp)
gdps <- indgp[,X.3]
gdps <- ingdp[,X.3]
gdps <- ingdp$X.3
gdps <- capply(gdps, function(x) gsub(",", "", x))
gdps <- apply(gdps, function(x) gsub(",", "", x))
gdps <- lapply(gdps, function(x) gsub(",", "", x))
gdps <- lapply(gdps, function(x) gsub(" ", "", x))
gdps <- gpds[is.numeric[gpds]]
gdps <- gpds[is.numeric(gdps)
]
gdps <- gdps[is.numeric(gdps)
]
gdps <- ingdp$X.3
gdps <- lapply(gdps, function(x) gsub(",", "", x))
gdps <- lapply(gdps, function(x) gsub(" ", "", x))
gdps <- gpds[c(5:700)]
gdps <- gdps[c(5:700)]
gdps <- ingdp$X.3
gdps <- lapply(gdps, function(x) gsub(",", "", x))
gdps <- lapply(gdps, function(x) gsub(" ", "", x))
gdps <- gdps[c(5:count(gdps))]
gdps <- gdps[c(5:length(gdps))]
gdps <- as.numeric(gdps)
warnings()
gpds <- omit.na(gpds)
gpds <- na.omit(gpds)
gpds <- na.omit(gdps)
overmill <- gpds[gpds < 1000000]
overmill <- gpds[gpds > 1000000]
mean(overmill)
getwd()
?download
?download.file
?unzip
getwd()
View(by_package)
install.packages("ggplot2")
ggplot(totals, aes(x=date)) + geom_histogram(binwidth=.5)
?install.package
?install
?install.packages
activity <<- read.csv("activity.csv")
setwd("C:/Users/Fritz.Lowrey/Dropbox/GitHub/RepData_PeerAssessment1")
activity <<- read.csv("activity.csv")
totals <<-aggregate(activity[, 1], list(activity$date), sum)
totals <<-aggregate.data.frame(activity[, 1], list(activity$date), sum)
View(totals)
View(totals)
?aggregate.data.frame
View(totals)
View(totals)
names(totals) <- c("Date", "Total")
View(totals)
View(totals)
totals$Date
totals <<-data.frame(aggregate(activity[, 1], list(activity$date), sum))
View(totals)
View(totals)
totals <<-data.frame(aggregate(activity[, 1], list(activity$date), sum), row.names=1)
View(totals)
View(totals)
aggregate(activity[, 1], list(activity$date), sum)
names(totals) <- c("date", "total")
View(totals)
View(totals)
View(totals)
totals <<-data.frame(aggregate(activity, list(activity$date), sum))
totals <<-data.frame(aggregate(activity$steps, list(activity$date), sum))
View(totals)
totals <<-aggregate(activity$steps, list(activity$date), sum)
View(totals)
View(activity)
names(totals) <- c("date", "total")
View(totals)
ggplot(totals, aes(x=totals$date])) + geom_histogram(binwidth=.5)
library(ggplot2)
ggplot(totals, aes(x=totals$date])) + geom_histogram(binwidth=.5)
ggplot(totals, aes(x=totals[,1])) + geom_histogram(binwidth=.5)
?ggplot
?qplot
qplot(totals$date, totals$total, geom="histogram")
?qplot
qplot(x=totals$date,data=totals)
qplot(x=totals$date,data=totals, xlab="date", ylab="total")
hist(totals$date, xlab="date")
View(totals)
totals <- aggregate(activity[,1], by=activity$date, sum)
totals <- aggregate(activity[,1], by=list(activity$date), sum)
View(totals)
totals$date <- as.Date(totals$Group.1, format="%d/%m/%Y")
View(totals)
totals <- aggregate(activity[,1], by=list(activity$date), sum)
View(totals)
totals$date <- as.Date(totals$Group.1, format="%Y-%m-%d")
View(totals)
ggplot(totals, aes(x=date)) + geom_histogram(binwidth=count(totals[,1]))
cound(tables)
count(totals)
length(totals)
length(totals[,1])
ggplot(totals, aes(x=date)) + geom_histogram(binwidth=length(totals[,1]))
ggplot(totals, aes(x=date)) + geom_histogram(binwidth=30, colour="white") +
scale_x_date(labels = date_format("%Y-%m-%d"),
breaks = seq(min(totals$date))-5, min(totals$date)+5, 30),
limits = c(as.Date("2012-10-01"), as.Date("2012-11-30"))) +
ylab("Total") + xlab("Date") +
theme_bw() + opts(axis.text.x = theme_text(angle=90))
library("scales")
totals$num <- as.number(totals.date)
totals$num <- as.numeric(totals.date)
totals$num <- as.numeric(totals$date)
p <- ggplot(totals, aes(num, ..count..))
p <- p + geom_histogram(binwidth = 60, colour="white")
p
View(totals)
p <- ggplot(totals, aes(num, ..x..))
p <- p + geom_histogram(binwidth = 60, colour="white")
p
p <- ggplot(totals, aes(num, ..Total..))
p
p <- p + geom_histogram(binwidth=30)
p
p <- ggplot(totals, aes(num, ..total..))
p <- p + geom_histogram(binwidth=30)
p
p <- ggplot(totals, aes(num, ..x..))
p <- p + geom_histogram(binwidth=30)
p
?hist
hist(totals$num, totals )
hist(totals[,4]
, totals )
histor(totals$x)
hist(totals$x)
hist(totals$num)
summary(totals)
hist(totals$x)
library(dplyr)
library(lubridate)
View(activity)
View(activity)
activity <- mutate(activity, datenum=as.date(activity$date))
by_date <- group_by(activity, date)
View(by_date)
View(by_date)
by_date <- group_by(activity, as.number(date))
by_date <- group_by(activity, as.numeric(date))
View(by_date)
View(by_date)
by_date <- group_by(activity, as.Date(date))
View(by_date)
activity$new_date <- as.Date(activity$date)
View(activity)
totals <- aggregate(tables[,1:2], tables$new_date )
totals <- aggregate(activity[,1:2], activity$new_date )
totals <- aggregate(activity[,1:2], activity$new_date, sum )
totals <- aggregate(activity[,1:2], by=list(activity$new_date), sum )
totals <- aggregate(activity[,1], by=list(activity$new_date), sum )
totals <- aggregate(activity[,1], by=list(Date=activity$new_date), sum )
totals
totals <- aggregate(Total=activity[,1], by=list(Date=activity$new_date), sum )
totals <- aggregate(activity[,1], by=list(Date=activity$new_date), sum )
View(totals)
hist(totals$x)
ggplot(totals, x=totals$Date)
ggplot(totals, x=totals$Date) + geom_histogram(binwidth=5)
ggplot(totals, aes(x=totals$Date) + geom_histogram(binwidth=5)
ggplot(totals, aes(x=totals$Date)) + geom_histogram(binwidth=5)
ggplot(totals, aes(x=totals$Date)) + geom_histogram(binwidth=10)
ggplot(totals, aes(x=totals$Date)) + geom_histogram(binwidth=2)
ggplot(totals, aes(x=totals$Date)) + geom_histogram(binwidth=10)
ggplot(totals, aes(x=totals$Date)) + geom_histogram(binwidth=5)
ggplot(totals, aes(x=totals$Date)) + geom_histogram(binwidth=1000)
ggplot(totals, aes(x=totals$x)) + geom_histogram(binwidth=1000)
?as.int
?as.Number
?as.Numerica
?as.Numeric
?as.numeric
library(ggplot2)
library(lubridate)
library(knitr)
library(data.table)
library(ddplyr)
activity <- read.csv("activity.csv", header=TRUE)
activity$date <- as.Date(activity$date, format = "%Y-%m-%d")
activity$interval <- as.numeric(activity$interval)
activity$interval <- as.factor(activity$interval)
totals <- aggregate(steps ~ date, activity, sum)
ggplot(totals, aes(x = steps)) +
geom_histogram(fill = "white", binwidth = 1000) +
labs(title="Steps Taken per Day",
x = "Steps", y = "Number of Times in a Day") + theme_bw()
ggplot(totals, aes(x = steps)) +
geom_histogram(fill = "black", binwidth = 1000) +
labs(title="Steps Taken per Day",
x = "Steps", y = "Number of Times in a Day") + theme_bw()
stepmean   <- mean(totals$steps, na.rm=TRUE)
stepmedian <- median(totals$steps, na.rm=TRUE)
stepmean
intervals <- aggregate(activity$steps ~ activity$interval, FUN=mean, na.rm=TRUE)
View(intervals)
View(intervals)
intervals$interval <- as.integer(levels(intervals$interval)[intervals$interval])
colnames(intervals) <- c("interval", "steps")
intervals$interval <- as.integer(intervals$interval)
View(intervals)
View(intervals)
View(totals)
View(totals)
View(intervals)
intervals <- aggregate(activity$steps ~ activity$interval, FUN=mean, na.rm=TRUE)
colnames(intervals) <- c("interval", "steps")
ggplot(intervals, aes(x=interval, y=steps)) +
geom_line(color="black", size=1) +labs(title="Daily Pattern", x="Interval", y="Steps") +  theme_bw()
?ggplot
intervals$interval <- as.integer(levels(intervals$interval)[intervals$interval])
ggplot(intervals, aes(x=interval, y=steps)) +
geom_line(color="black", size=1) +labs(title="Daily Pattern", x="Interval", y="Steps") +  theme_bw()
maxsteps <- intervals[, max(intervals$steps)]$interval
max(interval$steps)
max(intervals$steps)
intervals[intervals$steps == max(intervals$steps)]$interval
intervals[intervals$steps == max(intervals$steps),]$interval
intervals <- aggregate(activity, by=list(activity$interval), FUN=mean, na.rm=TRUE)
View(intervals)
activity <- read.csv("activity.csv", header=TRUE)
activity$date <- as.Date(activity$date, format = "%Y-%m-%d")
activity$interval <- as.numeric(activity$interval)
intervals <- aggregate(activity$steps, by=list(interval = activity$interval), FUN=mean, na.rm=TRUE)
intervals$interval <- as.integer(levels(intervals$interval)[intervals$interval])
new_activity <- activity
na_activits <- new_activity[is.na(new_activity$steps),]
new_activity[is.na(new_activity$steps), ] <- intervals[intervals$interval == new_activity[is.na(new_activity$steps), ]$x
new_activity[is.na(new_activity$steps), ] <- intervals[intervals$interval == new_activity[is.na(new_activity$steps), ],]$x
length(new_activity$steps)
for(v in length(new_activity$steps)) v
for(v in length(new_activity$steps)) { v }
for(v in length(new_activity$steps)) {
print(v)
}
for(v in new_activity$steps) v
for(v in new_activity$date) v
for(v in 1:length(new_activity$steps)) {
v }
v
for(v in 1:length(new_activity$steps)) { v }
for(v in c(1:length(new_activity$steps)) { v }
for(v in c(1:length(new_activity$steps))) { v }
v = 0
View(new_activity)
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/RepData_PeerAssessment1/testscript.r')
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/RepData_PeerAssessment1/testscript.r')
new_activity[1,]$steps
intervals[intervals$interval == new_activity[v,]$interval, ]
intervals[intervals$interval == new_activity[v,]$interval, ]$steps
debugSource('C:/Users/Fritz.Lowrey/Dropbox/GitHub/RepData_PeerAssessment1/testscript.r')
length(is.na(new_activity$steps))
View(new_activity)
View(new_activity)
source('C:/Users/Fritz.Lowrey/Dropbox/GitHub/RepData_PeerAssessment1/testscript.r')
source('C:/Users/Fritz.Lowrey/Dropbox/GitHub/RepData_PeerAssessment1/testscript.r')
View(intervals)
View(intervals)
source('C:/Users/Fritz.Lowrey/Dropbox/GitHub/RepData_PeerAssessment1/testscript.r')
ggplot(new_totals, aes(x = steps)) +
geom_histogram(fill = "blue", binwidth = 1000) +
labs(title="Histogram of Steps Taken per Day",
x = "Number of Steps per Day", y = "Number of times in a day(Count)") + theme_bw()
weekday(new_activity$date)
library(lubridate)
?weekday
?weekdays
weekdays(new_activity$date)
new_activity$weekday <- weekdays(new_activity$date)
View(new_activity)
View(new_activity)
weekend_vals <- new_activity[new_activity$weekday %in% c("Saturday", "Sunday"),]
View(weekend_vals)
source('C:/Users/Fritz.Lowrey/Dropbox/GitHub/RepData_PeerAssessment1/testscript.r')
View(new_activity)
View(new_activity)
new_activites$weekday <- weekdays(new_activities$date)
new_activity$weekday <- weekdays(new_activity$date)
weekend_vals <- new_activity[new_activity$weekday %in% c("Saturday", "Sunday"),]
source('C:/Users/Fritz.Lowrey/Dropbox/GitHub/RepData_PeerAssessment1/testscript.r')
source('C:/Users/Fritz.Lowrey/Dropbox/GitHub/RepData_PeerAssessment1/testscript.r')
source('C:/Users/Fritz.Lowrey/Dropbox/GitHub/RepData_PeerAssessment1/testscript.r')
View(new_activity)
source('C:/Users/Fritz.Lowrey/Dropbox/GitHub/RepData_PeerAssessment1/testscript.r')
source('C:/Users/Fritz.Lowrey/Dropbox/GitHub/RepData_PeerAssessment1/testscript.r')
source('C:/Users/Fritz.Lowrey/Dropbox/GitHub/RepData_PeerAssessment1/testscript.r')
source('C:/Users/Fritz.Lowrey/Dropbox/GitHub/RepData_PeerAssessment1/testscript.r')
ggplot(data_by_weekdays, aes(x=interval, y=steps)) +
geom_line(color="violet") +
facet_wrap(~ dayofweek, nrow=2, ncol=1) +
labs(x="Interval", y="Number of steps") +
theme_bw()
